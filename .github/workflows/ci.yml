name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v4

      - name: 安装依赖(ubuntu)
        if: ${{ matrix.os=='ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libltdl-dev libxcb*
          sudo apt-get install -y libx11* libgl1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
          sudo apt-get install -y libxtst-dev pkg-config autoconf libtool bison libglu1-mesa-dev freeglut3-dev
          sudo apt-get install -y libfontconfig1-dev
          sudo apt-get install -y libgles2-mesa-dev libdrm-dev libgbm-dev libsm-dev libcups2-dev libmtdev-dev libts-dev

      - name: 缓存vcpkg仓库(windows)
        if: ${{ matrix.os=='windows-latest' }}
        id: cache_vcpkg_windows
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/vcpkg
          key: cache_vcpkg_windows

      - name: 缓存vcpkg仓库(ubuntu)
        if: ${{ matrix.os=='ubuntu-latest' }}
        id: cache_vcpkg_ubuntu
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/vcpkg
          key: cache_vcpkg_ubuntu

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config Release

      - name: Check Files
        run: |
          ls ${{github.workspace}}/build
          ls ${{github.workspace}}/build/bin

