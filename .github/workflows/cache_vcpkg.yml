name: Cache vcpkg

on:
  workflow_dispatch:  # 手动触发

jobs:
  cache_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: 缓存vcpkg仓库(windows)
        id: cache_vcpkg_windows
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/vcpkg
          key: cache_vcpkg_windows

      - name: 下载vcpkg仓库(windows)
        if: steps.cache_vcpkg_windows.outputs.cache-hit != 'true'
        run: |
          cd ${{github.workspace}}
          git clone https://github.com/Microsoft/vcpkg.git -b 2025.06.13
          ${{github.workspace}}/vcpkg/bootstrap-vcpkg.bat
          ${{github.workspace}}/vcpkg/vcpkg install lua sol2 tinyxml2 qt5-base opencascade gtest

      - name: Clean Vcpkg
        shell: bash
        run: |
          if [ -d "${{github.workspace}}/vcpkg/buildtrees" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/buildtrees"
            echo "删除目录: ${{github.workspace}}/vcpkg/buildtrees"
          fi
          if [ -d "${{github.workspace}}/vcpkg/downloads" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/downloads"
            echo "删除目录: ${{github.workspace}}/vcpkg/downloads"
          fi
          if [ -d "${{github.workspace}}/vcpkg/packages" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/packages"
            echo "删除目录: ${{github.workspace}}/vcpkg/packages"
          fi

  cache_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
          
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y libltdl-dev libxcb*
          sudo apt-get install -y libx11* libgl1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
          sudo apt-get install -y libxtst-dev pkg-config autoconf libtool bison libglu1-mesa-dev freeglut3-dev
          sudo apt-get install -y libfontconfig1-dev
          sudo apt-get install -y libgles2-mesa-dev libdrm-dev libgbm-dev libsm-dev libcups2-dev libmtdev-dev libts-dev

      - name: 缓存vcpkg仓库(ubuntu)
        id: cache_vcpkg_ubuntu
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/vcpkg
          key: cache_vcpkg_ubuntu

      - name: 下载vcpkg仓库(ubuntu)
        if: steps.cache_vcpkg_ubuntu.outputs.cache-hit != 'true'
        run: |
          cd ${{github.workspace}}
          git clone https://github.com/Microsoft/vcpkg.git -b 2025.06.13
          ${{github.workspace}}/vcpkg/bootstrap-vcpkg.sh

      - name: vcpack安装qt5-base(ubuntu)
        if: steps.cache_vcpkg_ubuntu.outputs.cache-hit != 'true'
        run: ${{github.workspace}}/vcpkg/vcpkg install qt5-base

      - name: Clean Vcpkg for qt5-base
        shell: bash
        run: |
          if [ -d "${{github.workspace}}/vcpkg/buildtrees" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/buildtrees"
            echo "删除目录: ${{github.workspace}}/vcpkg/buildtrees"
          fi
          if [ -d "${{github.workspace}}/vcpkg/downloads" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/downloads"
            echo "删除目录: ${{github.workspace}}/vcpkg/downloads"
          fi
          if [ -d "${{github.workspace}}/vcpkg/packages" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/packages"
            echo "删除目录: ${{github.workspace}}/vcpkg/packages"
          fi

      - name: vcpack安装opencascade(ubuntu)
        if: steps.cache_vcpkg_ubuntu.outputs.cache-hit != 'true'
        run: ${{github.workspace}}/vcpkg/vcpkg install opencascade

      - name: Clean Vcpkg for opencascade
        shell: bash
        run: |
          if [ -d "${{github.workspace}}/vcpkg/buildtrees" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/buildtrees"
            echo "删除目录: ${{github.workspace}}/vcpkg/buildtrees"
          fi
          if [ -d "${{github.workspace}}/vcpkg/downloads" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/downloads"
            echo "删除目录: ${{github.workspace}}/vcpkg/downloads"
          fi
          if [ -d "${{github.workspace}}/vcpkg/packages" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/packages"
            echo "删除目录: ${{github.workspace}}/vcpkg/packages"
          fi

      - name: vcpack安装other(ubuntu)
        if: steps.cache_vcpkg_ubuntu.outputs.cache-hit != 'true'
        run: ${{github.workspace}}/vcpkg/vcpkg install lua sol2 tinyxml2 gtest

      - name: Clean Vcpkg for other
        shell: bash
        run: |
          if [ -d "${{github.workspace}}/vcpkg/buildtrees" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/buildtrees"
            echo "删除目录: ${{github.workspace}}/vcpkg/buildtrees"
          fi
          if [ -d "${{github.workspace}}/vcpkg/downloads" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/downloads"
            echo "删除目录: ${{github.workspace}}/vcpkg/downloads"
          fi
          if [ -d "${{github.workspace}}/vcpkg/packages" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/packages"
            echo "删除目录: ${{github.workspace}}/vcpkg/packages"
          fi

  cache_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: 缓存vcpkg仓库(macos)
        id: cache_vcpkg_macos
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/vcpkg
          key: cache_vcpkg_macos

      - name: 下载vcpkg仓库(macos)
        if: steps.cache_vcpkg_macos.outputs.cache-hit != 'true'
        run: |
          cd ${{github.workspace}}
          git clone https://github.com/Microsoft/vcpkg.git -b 2025.06.13
          ${{github.workspace}}/vcpkg/bootstrap-vcpkg.sh

      - name: vcpack安装(macos)
        if: steps.cache_vcpkg_macos.outputs.cache-hit != 'true'
        run: ${{github.workspace}}/vcpkg/vcpkg install qt5-base lua sol2 tinyxml2 opencascade gtest

      - name: Clean Vcpkg
        shell: bash
        run: |
          if [ -d "${{github.workspace}}/vcpkg/buildtrees" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/buildtrees"
            echo "删除目录: ${{github.workspace}}/vcpkg/buildtrees"
          fi
          if [ -d "${{github.workspace}}/vcpkg/downloads" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/downloads"
            echo "删除目录: ${{github.workspace}}/vcpkg/downloads"
          fi
          if [ -d "${{github.workspace}}/vcpkg/packages" ]; then 
            rm -rf "${{github.workspace}}/vcpkg/packages"
            echo "删除目录: ${{github.workspace}}/vcpkg/packages"
          fi